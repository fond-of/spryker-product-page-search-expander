<?php

namespace FondOfSpryker\Zed\ProductPageSearchExpander\Communication\Plugin\ProductPageSearch\Elasticsearch\ProductPageData;

use Codeception\Test\Unit;
use Generated\Shared\Transfer\ProductPageSearchTransfer;

class IsSoldOutDataExpanderPluginTest extends Unit
{
    /**
     * @var \FondOfSpryker\Zed\ProductPageSearchExpander\Communication\Plugin\ProductPageSearch\Elasticsearch\ProductPageData\IsSoldOutDataExpanderPlugin
     */
    protected $plugin;

    /**
     * @var \Generated\Shared\Transfer\ProductPageSearchTransfer|\PHPUnit\Framework\MockObject\MockObject
     */
    protected $productAbstractPageSearchTransfer;

    /**
     * @return void
     */
    protected function _before()
    {
        parent::_before(); // TODO: Change the autogenerated stub

        $this->productAbstractPageSearchTransfer = $this->getMockBuilder(ProductPageSearchTransfer::class)
            ->disableOriginalConstructor()
            ->setMethods(['setIsSoldOut'])
            ->getMock();

        $this->plugin = new IsSoldOutDataExpanderPlugin();
    }

    /**
     * @return void
     */
    public function testIsSoldOutExpanderPluginTestSuccessYes(): void
    {
        $this->productAbstractPageSearchTransfer->expects($this->once())
            ->method('setIsSoldOut');

        $this->plugin->expandProductPageData([
            'attributes' => json_encode(['is_sold_out' => 'yes']),
        ], $this->productAbstractPageSearchTransfer);
    }

    /**
     * @return void
     */
    public function testIsSoldOutExpanderPluginTestSuccessNo(): void
    {
        $this->productAbstractPageSearchTransfer->expects($this->once())
            ->method('setIsSoldOut');

        $this->plugin->expandProductPageData([
            'attributes' => json_encode(['is_sold_out' => 'no']),
        ], $this->productAbstractPageSearchTransfer);
    }

    /**
     * @return void
     */
    public function testIsSoldOutExpanderPluginTestFailedArrayIndexMissing(): void
    {
        $this->productAbstractPageSearchTransfer->expects($this->once())
            ->method('setIsSoldOut');

        $this->plugin->expandProductPageData([
            'attributes' => json_encode(['wrong_key' => 'foo']),
        ], $this->productAbstractPageSearchTransfer);
    }
}
